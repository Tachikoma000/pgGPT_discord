{"graph_dict": {"Subgrounds": [["can be installed via", "pip"], ["can be installed via", "pip with"], ["can be installed via", "pip with the following commands"], ["can be installed via", "pip with the following commands: pip install"], ["can be installed via", "pip with the following commands: pip install upgrade"], ["can be installed via", "pip with the following commands: pip install upgrade subgrounds"], ["can be installed via", "pip with the following commands: pip install upgrade subgrounds or"], ["can be installed via", "pip with the following commands: pip install upgrade subgrounds or python"], ["can be installed via", "pip with the following commands: pip install upgrade subgrounds or python m"], ["can be installed via", "pip with the following commands: pip install upgrade subgrounds or python m pip install"], ["requires", "python >= 3.10"], ["is", "class"], ["provides", "top level API"], ["will be using", "class"], ["is used to", "load GraphQL APIs"], ["is used to", "execute querying operations"], ["is meant to be used as", "singleton"], ["initialized once and reused throughout", "project"], ["initialize", "Subgrounds object"], ["load", "GraphQL API"], ["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/curve\""], ["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/curve/finance\""], ["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/curve/finance/ethereum\""], ["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/curve/finance/ethereum/interface\""], ["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/curve/finance/ethereum/interface/tool\""], ["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/curve/finance/ethereum/interface/tool/GraphQL\""], ["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/curve/finance/ethereum/interface/tool/GraphQL/string\""], ["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/curve/finance/ethereum/interface/tool/GraphQL/string/builder\""], ["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/curve/finance/ethereum/interface/tool/GraphQL/string/builder/subgraph\""], ["provides", "3 main ways"], ["query", "data"], ["query", "different data structures"], ["query", "typing"], ["merge", "list of FieldPaths"], ["load_subgraph", "https://api.thegraph.com/subgraphs/name/messari/curve finance ethereum"], ["load_subgraph", "curve"], ["query", "query()"], ["query_json", "query_json()"], ["query_df", "query_df()"], ["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/aavev2\""], ["load_subgraph", "Ethereum"], ["provides", "default server timeout of 30s"], ["handles", "GraphQL query pagination automatically"], ["split", "query into multiple queries"], ["provides", "two pagination strategies"], ["will raise", "a PaginationError exception"], ["provides", "LegacyStrategy"], ["provides", "ShallowStrategy"], ["allows", "developers"], ["paginate", "query document"], ["paginate", "pagination strategy"], ["is", "library"], ["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/curve\\n\\n\\n\\nfinance\\n\\n\\n\\nethereum\""], ["query_df", "curve.Query.financialsDailySnapshots(first=2500)"], ["paginated", "nested field"], ["paginated", "requests"], ["access", "all the data"], ["set", "first argument"], ["import", "required components"], ["create", "Figure instance"], ["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/aave\\n\\n\\n\\nv2\\n\\n\\n\\nethereum\""], ["create", "Indicator"], ["execute", "DataRequest"], ["mk_request", "FieldPath"], ["load_subgraph", "uniswap/uniswap-v3"], ["load_api", "None"], ["mk_request", "None"], ["execute", "None"], ["execute_iter", "None"], ["query_json", "None"], ["query_json_iter", "None"], ["query_df", "None"], ["query_df_iter", "None"], ["query", "None"], ["execute", "Subgrounds.mk_request"], ["execute", "pagination_strategy"], ["execute_iter", "Subgrounds.mk_request"], ["execute_iter", "pagination_strategy"], ["query_json", "Subgrounds.mk_request"], ["query_json", "pagination_strategy"], ["load_subgraph", "'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3'"], ["Query.swaps", "None"], ["query", "eth_usdc_last"], ["offers", "PaginationStrategies"], ["paginate automatically", "setting pagination variables"], ["load_subgraph", "'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3'"], ["load_subgraph", "'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3'"], ["simplifies and streamlines", "querying and data analysis"], ["has been initialized with", "custom header"], ["can query", "decentralized network subgraph"], ["automatically handles", "pagination"], ["makes", "multiple GraphQL queries"], ["load_subgraph", "\"https://api.playgrounds.network/v1/proxy/subgraphs/id/ELUcwgpm14LKPLrBRuVvPvNKHQ9HvwmtKgKSH6123cr7\""], ["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/curve finance\""], ["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/stargate-ethereum\""], ["Query.usageMetricsDailySnapshots", "first=1000"], ["imports", "libraries"], ["loads", "environment variables"], ["creates", "Subgrounds object"], ["loads", "Uniswap v3 subgraph"], ["queries", "financialsDailySnapshots endpoint"], ["converts", "query results"], ["extracts", "first row"], ["view", "result"], ["queries", "liquidity pools"], ["retrieves", "information"], ["load_subgraph", "Uniswap v3 subgraph"], ["query_df", "latest_snapshots"], ["query_df", "pools"], ["uses", "Subgrounds library"], ["Load", "subgraph"], ["Load", "subgraph"], ["Import", "subgrounds"], ["instantiate", "subgrounds"]], "curve.Query.pools": [["is a field path", "curve_pools"]], "curve_pools": [["first", "10"], ["orderBy", "totalValueLockedUSD"], ["orderDirection", "desc"], ["where", "curve.LiquidityPool.createdBlockNumber > 14720000"], ["outputToken.name", "name"]], "liquidityPools": [["first", "10"], ["orderBy", "totalValueLockedUSD"], ["orderDirection", "desc"]], "Filtering subgraphs": [["is done via", "where argument"]], "subgraphs": [["provides", "several options"]], "filter": [["based on", "field path"]], "Clicking": [["will enable", "editing and execution"]], "We": [["will be using", "curve as the base subgraph"]], "subgrounds": [["provides", "Subgrounds"], ["is integrated through", "clients"], ["load_subgraph", "url"], ["load_subgraph", "save_schema"], ["load_subgraph", "cache_dir"], ["load_api", "url"], ["load_api", "save_schema"], ["load_api", "cache_dir"], ["insert", "Playgrounds API key"], ["from_pg_key", "\"pg-AqAFS8G3TN3Kagdgw2MrGjFvDGUgxImS\""]], "sg": [["load_subgraph", "curve"], ["query_df", "curve.Query.liquidityPool"], ["query_df", "top_pools.dailySnapshots"], ["query_df", "curve.Query.liquidityPool"], ["Initialize", "Subgrounds"], ["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/stargate-ethereum\""], ["query_df", "cumulative_metrics_fields"], ["query_df", "daily_metrics_fields"], ["query_df", "snapshot_info_fields"], ["query_df", "protocol_metrics_fields"], ["query_df", "snapshot_fields"], ["query_df", "creation_fields"], ["query_df", "cumulative_metrics_fields"], ["query_df", "identity_fields"], ["query_df", "liquidity_fields"], ["query_df", "rewards_fields"], ["query_df", "volume_fields"], ["query_df", "value_locked_fields"], ["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/stargate-ethereum\""], ["query_df", "snapshot_fields"], ["query_df", "creation_fields"], ["query_df", "cumulative_metrics_fields"], ["query_df", "identity_fields"], ["query_df", "liquidity_fields"], ["query_df", "rewards_fields"], ["query_df", "volume_fields"], ["query_df", "value_locked_fields"]], "https://api.thegraph.com/subgraphs/name/messari/curve": [["finance", "ethereum"]], "pool": [["is shorthand for", "examples"], ["orderBy", "cumulativeTotalRevenueUSD"], ["orderDirection", "desc"], ["has ID", "pool's ID"]], "multiple conditions": [["would not result", "in any data being returned"]], "Using": [["== and", "=! operators"]], "top_pools": [["first", "4"], ["orderBy", "pool.cumulativeTotalRevenueUSD"], ["orderDirection", "desc"], ["first", "3"], ["orderBy", "snapshot.dailyVolumeUSD"], ["orderDirection", "desc"]], "curve.Query.liquidityPool": [["orderBy", "pool.outputToken.lastPriceUSD"], ["orderDirection", "desc"]], "FieldPaths": [["originate from", "same subgraph"], ["merge", "single query"]], "query": [["enable editing and execution", "code-blocks"], ["clicking", "button"], ["executes", "FieldPath objects"], ["return", "data"], ["as", "tuple"], ["contains", "other"]], "curve": [["Query", "liquidityPools"], ["Query", "orderBy=curve.LiquidityPool.cumulativeVolumeUSD"], ["Query", "orderDirection=\"desc\""], ["Query", "first=4"]], "most_traded_pools": [["dailySnapshots", "orderBy=curve.LiquidityPoolDailySnapshot.dailyTotalRevenue"], ["dailySnapshots", "orderDirection=\"desc\""], ["dailySnapshots", "first=3"]], "aave_v2": [["sg.load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/aavev2\""], ["sg.load_subgraph", "Ethereum"], ["sg.load_subgraph", "Subgrounds"], ["sg.load_subgraph", "\"https://api.thegraph.com/subgraphs/name/messari/aavev2\""], ["sg.load_subgraph", "Ethereum"]], "aave_markets": [["is", "Query.markets"], ["first", "3"], ["orderBy", "Market.totalValueLockedUSD"], ["orderDirection", "\"desc\""], ["where", "Market.createdBlockNumber > 14720000"]], "query_df": [["can take", "optional parameter columns"], ["name", "\"Name\""], ["TVL (USD)", "\"TVL (USD)\""], ["fpaths", "columns"], ["fpaths", "concat"], ["fpaths", "pagination_strategy"]], "sushiswap": [["load_subgraph", "\"https://api.thegraph.com/subgraphs/name/sushiswap/exchange\""], ["Query.pair", "id=\"0x397ff1542f962076d0bfe58ea045ffa2d347aca0\""]], "SyntheticField": [["datetime_of_timestamp", "swap.timestamp"], ["class", "subgrounds.SyntheticField"], ["returns", "constant"], ["transform", "FieldPath"], ["map", "values"], ["using", "key value pairs"], ["not in", "dictionary"], ["used instead", "default"], ["map", "values"], ["using", "key value pairs"], ["not in", "dictionary"], ["is", "subgraph/fieldpath/#subgrounds.subgraph.fieldpath.SyntheticField"], ["constant", "'MINT'"], ["constant", "'BURN'"], ["will transform", "FieldPath"], ["representing", "Unix timestamp field"], ["is", "ISO8601 datetime string"], ["will map", "values of fpath"], ["_", "f"], ["_", "type_"], ["_", "deps"], ["_", "default"], ["returns", "constant"], ["with value", "value"], ["useful for", "injecting additional static data"], ["useful for", "merging entities"], ["parameters", "value"], ["return type", "SyntheticField"], ["map", "values"], ["map", "fpath"], ["map", "dict"], ["map", "default"], ["map", "key value pairs"], ["map", "key"], ["map", "pairs"], ["map", "values of fpath"], ["map", "values of fpath using key value pairs"], ["map", "values of fpath using key value pairs in dict"], ["will map", "values"], ["created for", "Pool entity"]], "Pagination": [["is performed by", "Subgrounds"], ["is related to", "PaginationNode"], ["is", "pagination/"], ["normalize", "None"], ["paginate_iter", "None"], ["paginate", "None"], ["PaginationError", "None"], ["PaginationNode", "None"], ["contains", "pagination algorithms"], ["make use of", "pagination strategies"], ["is based on", "GraphQL schema"]], "users": [["wishing to implement", "their own strategy"], ["address", "user_metrics"], ["id", "user_metrics"]], "PaginationError": [["contains", "the initial exception message"], ["contains", "the PaginationStrategy object"], ["is related to", "Pagination"], ["is", "pagination/#subgrounds.pagination.pagination.PaginationError"]], "PaginationStrategy": [["was in", "the state it was in"], ["is", "pagination/#subgrounds.pagination.pagination.PaginationStrategy"], ["takes", "*args and **kwargs"], ["raises", "StopPagination exception"]], "LegacyStrategy": [["supports", "pagination on nested fields"]], "ShallowStrategy": [["is faster than", "LegacyStrategy"]], "class": [["implements", "PaginationStrategy"], ["constructor", "accept"], ["raise", "SkipPagination"], ["step", "method"], ["subgrounds.pagination.strategies.ShallowStrategyArgGenerator", "pagination_nodes"], ["Cursor", "page_node"]], "method": [["accepts", "argument"], ["should return", "tuple"], ["raise", "StopPagination"]], "subgrounds.Subgrounds": [["Bases", "object"], ["load_subgraph", "url"], ["load_subgraph", "save_schema"]], "DataRequest": [["included in", "request"], ["is executed by", "Subgrounds"], ["returns", "response data"], ["is executed with", "pagination_strategy"], ["is executed with", "Subgrounds"], ["is executed with", "mk_request"], ["is executed with", "fpaths"], ["is executed with", "query_json"], ["mk_request", "FieldPath"], ["execute", "req"], ["execute_iter", "req"], ["query_json", "fpaths"], ["passes through", "transformation layer"], ["transformed to", "transformed request object"], ["yielded", "JSON data"], ["has", "documents"], ["selects", "fields"], ["of", "GraphQL Object"], ["of", "Interface"]], "'columns'": [["'is used to rename'", "'dataframes(s)'"], ["'must be the same as'", "'number of columns'"]], "'concat'": [["'indicates whether or not'", "'resulting dataframes should be concatenated together'"]], "'dataframes'": [["'must have the same'", "'number of columns'"], ["'must have the same'", "'column names and types'"]], "'names'": [["'can be set using'", "'columns argument'"]], "'Returns'": [["'A DataFrame containing'", "'reponse data'"]], "'Return type'": [["'pd.DataFrame | list'", "'pd.DataFrame'"]], "'Query'": [["'last 10 swaps from'", "'ETH/USDC pool'"], ["'last price FieldPath'", "'2628.975030015892'"]], "Subgraph Utilities": [["class", "subgrounds.Subgraph"], ["class", "subgrounds.FieldPath"], ["class", "subgrounds.SyntheticField"], ["constant", "SyntheticField"], ["returns", "iterator"]], "FieldPath": [["class", "subgrounds.Subgraph"], ["class", "subgrounds.FieldPath"], ["class", "subgrounds.SyntheticField"], ["should be included in", "request"], ["should be included in", "request"], ["should be included in", "request"], ["Returns", "type information"], ["Returns", "root field"], ["Returns", "leaf field"], ["Parameters", "fpaths"], ["Returns", "Selection tree"], ["Returns", "list of field names"], ["Generates", "name"], ["Parameters", "data"], ["Extract", "data"], ["Returns", "selection"]], "0xcbe1bacacc1e64fe613ae5eef2063563bd0057d1e3df": [["has timestamp", "1656016553"], ["has tx_type", "MINT"], ["has origin", "0x3435e7946d40b1a83c0cf154326fc6b3ca908952"], ["has amount_USD", "7.879784e+03"]], "0xdddaaddf59e5a3abff4feadef83b3ceb023a74424ea7": [["has timestamp", "1656016284"], ["has tx_type", "MINT"], ["has origin", "0xc747962e7e416e2a582813b1d7ad59eb83077fa6"], ["has amount_USD", "5.110840e+04"]], "0xa7671452c34a3b083083ef81e364489c2c9ee801a3b8": [["has timestamp", "1656016284"], ["has tx_type", "BURN"]], "StaticField": [["datetime_of_timestamp", "timestamp"]], "Plotly": [["is", "a library"], ["has", "TraceWrapper"], ["has", "Scatter"], ["has", "Pie"], ["extends", "subgrounds components"], ["has TraceWrapper", "Scatter"], ["has TraceWrapper", "Pie"], ["has TraceWrapper", "Bar"], ["has TraceWrapper", "Heatmap"], ["has TraceWrapper", "Contour"], ["has TraceWrapper", "Table"], ["has TraceWrapper", "Box"], ["has TraceWrapper", "Violin"], ["has TraceWrapper", "Histogram"]], "TraceWrapper": [["is", "a class"], ["is part of", "Plotly"]], "Scatter": [["is", "a class"], ["is part of", "Plotly"], ["is alias of", "graph_object"]], "Pie": [["is", "a class"], ["is part of", "Plotly"], ["is alias of", "graph_object"]], "Waterfall": [["is", "graph_object"]], "Funnel": [["is", "graph_object"]], "Indicator": [["is", "graph_object"]], "Scatter3d": [["is", "graph_object"]], "Surface": [["is", "graph_object"]], "Scattergeo": [["is", "graph_object"]], "Choropleth": [["is", "graph_object"]], "Scattermapbox": [["is", "graph_object"]], "Choroplethmapbox": [["is", "graph_object"]], "Densitymapbox": [["is", "graph_object"]], "PaginationNode": [["has first_value", "first_value"], ["has skip_value", "skip_value"], ["has filter_value", "filter_value"], ["has filter_value_type", "filter_value_type"], ["has key_path", "key_path"], ["has inner", "inner"], ["has get_vardefs()", "get_vardefs"], ["has normalize()", "normalize"], ["node_idx", "None"], ["filter_field", "None"], ["first_value", "None"], ["skip_value", "None"], ["filter_value", "None"], ["extract", "information about pagination fields"]], "FieldPath._merge": [["is", "subgraph/fieldpath/"], ["is", "subgrounds.subgraph.fieldpath.FieldPath"], ["is", "subgrounds.subgraph.fieldpath.FieldPath._merge"]], "FieldPath._name_path": [["is", "subgraph/fieldpath/"], ["is", "subgrounds.subgraph.fieldpath.FieldPath"], ["is", "subgrounds.subgraph.fieldpath.FieldPath._name_path"]], "FieldPath._name": [["is", "subgraph/fieldpath/"], ["is", "subgrounds.subgraph.fieldpath.FieldPath"], ["is", "subgrounds.subgraph.fieldpath.FieldPath._name"]], "FieldPath._extract_data": [["is", "subgraph/fieldpath/"], ["is", "subgrounds.subgraph.fieldpath.FieldPath"], ["is", "subgrounds.subgraph.fieldpath.FieldPath._extract_data"]], "FieldPath._selection": [["is", "subgraph/fieldpath/"], ["is", "subgrounds.subgraph.fieldpath.FieldPath"], ["is", "subgrounds.subgraph.fieldpath.FieldPath._selection"]], "FieldPath._set_arguments": [["is", "subgraph/fieldpath/"], ["is", "subgrounds.subgraph.fieldpath.FieldPath"], ["is", "subgrounds.subgraph.fieldpath.FieldPath._set_arguments"]], "FieldPath._select": [["is", "subgraph/fieldpath/"], ["is", "subgrounds.subgraph.fieldpath.FieldPath"], ["is", "subgrounds.subgraph.fieldpath.FieldPath._select"]], "FieldPath._extend": [["is", "subgraph/fieldpath/"], ["is", "subgrounds.subgraph.fieldpath.FieldPath"], ["is", "subgrounds.subgraph.fieldpath.FieldPath._extend"]], "SyntheticField.constant": [["is", "subgraph/fieldpath/#subgrounds.subgraph.fieldpath.SyntheticField"], ["is", "subgrounds.subgraph.fieldpath.SyntheticField"], ["is", "subgrounds.subgraph.fieldpath.SyntheticField.constant"]], "VariableDefinition": [["name", "query/#subgrounds.query.VariableDefinition.name"], ["type_", "query/#subgrounds.query.VariableDefinition.type_"], ["default", "query/#subgrounds.query.VariableDefinition.default"], ["graphql", "query/#subgrounds.query.VariableDefinition.graphql"]], "Argument": [["None", "query/#subgrounds.query.Argument"]], "Selection": [["None", "query/#subgrounds.query.Selection"], ["fmeta", "query/#subgrounds.query.Selection.fmeta"], ["alias", "query/#subgrounds.query.Selection.alias"], ["arguments", "query/#subgrounds.query.Selection.arguments"], ["selection", "query/#subgrounds.query.Selection.selection"], ["contains_list", "True"], ["add", "new_selections"], ["remove", "to_remove"], ["variable_args", "True"], ["map", "map_f"], ["map_args", "map_f"], ["filter_args", "predicate"], ["map", "Selection"], ["map_args", "recurse"]], "subgrounds.FieldPath": [["is", "FieldOperatorMixin"]], "subgrounds.Subgraph": [["is", "object"], ["url", "'str'"], ["schema", "SchemaMeta"], ["transforms", "'list[DocumentTransform]'"], ["is_subgraph", "'bool'"], ["Bases", "object"]], "fpaths": [["is", "FieldPath"], ["is", "list"], ["is", "FieldPath"], ["is", "list"], ["is", "FieldPath"], ["is", "list"], ["is", "FieldPath objects"], ["included in", "request"]], "query_json_iter": [["fpaths", "pagination_strategy"], ["fpaths", "pagination_strategy"]], "Subgrounds.query": [["response data", "Pandas DataFrame"]], "response data": [["cannot be flattened to", "single query"]], "querying": [["multiple list fields", "return different entities"]], "query_df_iter": [["returns", "iterator"], ["over", "response data pages"], ["as", "DataFrame"]], "FieldPath objects": [["provided", "multiple"]], "Query.swaps": [["orderBy", "univ3.Swap.timestamp"], ["orderDirection", "'desc'"], ["first", "1"], ["where", "univ3.Swap.pool == '0x8ad599c3a0ff1de082011efddc58f1908eb6e6d8'"], ["price", "eth_usdc_last"]], "value": [["is", "constant field's value"], ["is not in", "dictionary"]], "univ3": [["load_subgraph", "'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3'"]], "univ3.Mint": [["tx_type", "SyntheticField.constant('MINT')"]], "univ3.Burn": [["tx_type", "SyntheticField.constant('BURN')"]], "mints": [["transaction.id", "0xcbe1bacacc1e64fe613ae5eef2063563bd0057d1e3df."], ["timestamp", "1656016553"], ["tx_type", "MINT"], ["origin", "0x3435e7946d40b1a83c0cf154326fc6b3ca908952"]], "897983e+03": [["4", "0x3315617d426fc2b0db5d8dbccd549efaa8f1ae2969ca"], ["4", "0x3315617d426fc2b0db5d8dbccd549efaa8f1ae2969ca"]], "1656015693": [["MINT", "0xb7dd4d134b1794ee848e1af1a62b85d7b2ea9301"], ["MINT", "0xb7dd4d134b1794ee848e1af1a62b85d7b2ea9301"], ["MINT", "0xb7dd4d134b1794ee848e1af1a62b85d7b2ea9301"]], "0x7bbfae86f0c3c983651bd0671557cd851fc301317c06": [["1656015111", "MINT"]], "0xac56cee8ccd00d0c1d72ce3415140874552e80f4": [["3.432075e+04", "12"]], "0xea21c3a68a8f0c6a2721a3072e0c8b2edc77f4d2f0d9": [["1656014785", "BURN"]], "0x0709b103d46d71458a71e5d81230dd688809a53d": [["2.059106e+04", "6"]], "1656014120": [["MINT", "0x509984bfc0fb24e2d1377cfec224d3afec4c341e"], ["MINT", "0x509984bfc0fb24e2d1377cfec224d3afec4c341e"]], "2.517578e+03": [["13", "0x1ea59da77c442479af8fb51501a931260d473e249de7"]], "1656014018": [["BURN", "0x509984bfc0fb24e2d1377cfec224d3afec4c341e"]], "0xb9d31ef78b8bf786b422d948dd1fba246710078abff8": [["1656013998", "MINT"]], "1656013237": [["BURN", "0x665d2d2444f2384fb3d96aaa0ea3536b92984dce"], ["2.254100e+05", "19"], ["BURN", "0x01c3424a48c36104ea388482723347f15c0bc1bb1a80"]], "1656013034": [["BURN", "0x0084ee6c8893c01e252198b56ec127443dc27464"]], "timestamp": [["into", "human-readable ISO8601 string"], ["representing", "Unix timestamp field"]], "fpath": [["using", "dictionary"], ["using", "key value pairs"]], "'0x5777d92f208679db4b9778590fa3cab3ac9e2168'": [["'is'", "'DAI/USDC-001'"]], "'0x6c6bc977e13df9b0de53b251522280bb72383700'": [["'is'", "'DAI/USDC-005'"]], "'0x8ad599c3a0ff1de082011efddc58f1908eb6e6d8'": [["'is'", "'USDC/ETH-030'"]], "'0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640'": [["'is'", "'USDC/ETH-005'"]], "subgrounds.client": [["get_schema", "url"], ["get_schema", "headers"], ["query", "url"], ["query", "query_str"], ["query", "variables"], ["query", "headers"]], "subgrounds.contrib.plotly": [["TraceWrapper", "kwargs"], ["Scatter", "kwargs"], ["Scatter", "kwargs"]], "Bar": [["is alias of", "graph_object"]], "Heatmap": [["is alias of", "graph_object"]], "Contour": [["is alias of", "graph_object"]], "Table": [["is alias of", "graph_object"]], "Box": [["is alias of", "graph_object"]], "Violin": [["is alias of", "graph_object"]], "Histogram": [["is alias of", "graph_object"]], "Histogram2d": [["is alias of", "graph_object"]], "subgrounds.contrib.plotly.Funnel": [["alias of", "Waterfall"]], "subgrounds.contrib.plotly.Indicator": [["alias of", "Indicator"]], "subgrounds.contrib.plotly.Scatter3d": [["alias of", "Scatter3d"]], "subgrounds.contrib.plotly.Surface": [["alias of", "Surface"]], "subgrounds.contrib.plotly.Scattergeo": [["alias of", "Scattergeo"]], "subgrounds.contrib.plotly.Choropleth": [["alias of", "Choropleth"]], "subgrounds.contrib.plotly.Scattermapbox": [["alias of", "Scattermapbox"]], "subgrounds.contrib.plotly.Choroplethmapbox": [["alias of", "Choroplethmapbox"]], "subgrounds.contrib.plotly.Densitymapbox": [["alias of", "Densitymapbox"]], "subgrounds.contrib.plotly.Scatterpolar": [["alias of", "Scatterpolar"]], "subgrounds.contrib.plotly.Treemap": [["alias of", "Sunburst"], ["See", "https://plotly.com/python/treemaps/"]], "subgrounds.contrib.plotly.Icicle": [["alias of", "Icicle"], ["See", "https://plotly.com/python/icicle"]], "subgrounds.contrib.plotly.Sankey": [["alias of", "Sankey"]], "subgrounds.contrib.plotly.Parcoords": [["alias of", "Parcoords"]], "subgrounds.contrib.plotly.Parcats": [["alias of", "Parcats"]], "subgrounds.contrib.plotly.Carpet": [["alias of", "Carpet"]], "subgrounds.contrib.plotly.Scattercarpet": [["alias of", "Scattercarpet"]], "subgrounds.contrib.plotly.Contourcarpet": [["alias of", "Contourcarpet"]], "Contourcarpet": [["is alias of", "Contour"]], "`SkipPagination`": [["is strategy of", "`subgrounds.pagination.strategies`"]], "`LegacyStrategyArgGenerator`": [["is strategy of", "`subgrounds.pagination.strategies`"]], "`LegacyStrategyArgGenerator.Cursor`": [["is part of", "`LegacyStrategyArgGenerator`"]], "`LegacyStrategyArgGenerator.Cursor.update()`": [["is method of", "`LegacyStrategyArgGenerator.Cursor`"]], "`LegacyStrategyArgGenerator.Cursor.step()`": [["is method of", "`LegacyStrategyArgGenerator.Cursor`"]], "`LegacyStrategyArgGenerator.Cursor.args()`": [["is method of", "`LegacyStrategyArgGenerator.Cursor`"]], "`LegacyStrategyArgGenerator.Cursor.reset()`": [["is method of", "`LegacyStrategyArgGenerator.Cursor`"]], "`ShallowStrategyArgGenerator`": [["is strategy of", "`subgrounds.pagination.strategies`"]], "`ShallowStrategyArgGenerator.Cursor`": [["is part of", "`ShallowStrategyArgGenerator`"]], "`ShallowStrategyArgGenerator.Cursor.page_node`": [["is attribute of", "`ShallowStrategyArgGenerator.Cursor`"]], "PaginationNode.filter_value": [["is", "preprocess/#subgrounds.pagination.preprocess.PaginationNode.filter_value"]], "PaginationNode.filter_value_type": [["is", "preprocess/#subgrounds.pagination.preprocess.PaginationNode.filter_value_type"]], "PaginationNode.key_path": [["is", "preprocess/#subgrounds.pagination.preprocess.PaginationNode.key_path"]], "PaginationNode.inner": [["is", "preprocess/#subgrounds.pagination.preprocess.PaginationNode.inner"]], "PaginationNode.get_vardefs()": [["is", "preprocess/#subgrounds.pagination.preprocess.PaginationNode.get_vardefs"]], "normalize()": [["is", "preprocess/#subgrounds.pagination.preprocess.normalize"]], "PaginationStrategy.step()": [["is", "pagination/#subgrounds.pagination.pagination.PaginationStrategy.step"]], "subgrounds.pagination.PaginationNode": [["represents", "pagination config"], ["has", "node_idx"], ["has", "filter_field"], ["has", "first_value"], ["has", "skip_value"], ["has", "filter_value"], ["has", "filter_value_type"], ["has", "key_path"], ["has", "inner"], ["get_vardefs", "returns"]], "PaginationStrategies": [["implement", "functions and data structures"]], "strategies": [["done in", "four steps"]], "Generate": [["PaginationNode", "objects"]], "query document": [["normalized", "pagination field"], ["transformed to", "form"]], "field": [["requires pagination", "own set of variables"]], "initial query": [["transformed to", "new query"]], "data page": [["generate", "values for pagination variables"]], "variables": [["undefined", "document is pruned"]], "strategy": [["variable values computed", "step 3"]], "subgrounds.pagination.strategies": [["StopPagination", "args"], ["SkipPagination", "args"], ["LegacyStrategyArgGenerator", "pagination_nodes"]], "Cursor": [["moves self cursor forward", "previous response data"], ["iterating through", "PaginationNode"], ["inner", "PaginationNodes"], ["inner_idx", "0"], ["filter_value", "None"]], "step": [["data", "self"], ["data", "inner state machine"]], "data": [["type", "dict"], ["contains", "value"], ["contains", "type"], ["contains", "list"], ["contains", "nested data"]], "args": [["returns", "pagination arguments"]], "state machine": [["reset", "None"]], "subgrounds.pagination.preprocess.PaginationNode": [["represents", "pagination config"], ["node_idx", "index of PaginationNode"], ["filter_field", "name of node's filter field"], ["first_value", "initial value of first argument"], ["skip_value", "initial value of skip argument"], ["filter_value", "initial value of filter argument"], ["filter_value_type", "type of filter value"], ["key_path", "location in list field"], ["inner", "nested pagination nodes"], ["get_vardefs", "returns list of variable definitions"]], "subgrounds.pagination.preprocess": [["normalize", "injects graphql components"]], "paginate": [["executes", "request document"], ["is based on", "GraphQL schema"]], "paginate_iter": [["executes", "request document"]], "subgrounds.pagination.utils": [["merge", "data1"], ["merge", "data2"], ["merge", "combined result"], ["merge_input_value_object_metas", "data1"], ["merge_input_value_object_metas", "data2"], ["merge_input_value_object_metas", "combined result"]], "data1": [["must be", "the same type"], ["and", "data2"], ["and", "data2"]], "data2": [["must be", "the same type"]], "subgrounds.transform": [["represents", "transformation layer"], ["applied to", "DataRequest objects"], ["applied to", "response data"]], "DocumentTransform": [["represents", "transformation layer"], ["applied to", "Document objects"], ["applied to", "response data"], ["is applied to", "DataRequest objects"], ["is applied to", "response data"], ["is applied to", "Document objects"], ["is", "initial Document object"]], "Document": [["passes through", "transformation layer"], ["transformed to", "transformed document"], ["yields", "JSON data"], ["is", "initial object"], ["is", "transformed response data"], ["has", "url"], ["has", "query"], ["has", "fragments"], ["has", "variables"], ["contains", "Selections"], ["contains", "Arguments"], ["contains", "DataRequest"]], "subgrounds.transform.TypeTransform": [["transform to be applied", "scalar fields"], ["type indicating", "scalar values"], ["function to be applied", "scalar values"], ["transform_document", "all Document objects"], ["transformed document", "Document"], ["transform_response", "response data"], ["initial Document object", "resulting JSON data"]], "subgrounds.transform.LocalSyntheticField": [["subgraph", "synthetic field's object"], ["synthetic field", "field fmeta"], ["object for synthetic field", "TypeMeta.ObjectMeta"]], "Transform": [["is applied to", "response data"], ["is applied to", "requests"]], "RequestTransform": [["is applied to", "DataRequest objects"], ["is applied to", "response data"], ["yields", "JSON data"], ["is", "initial request object"]], "TypeTransform": [["is applied to", "response data"], ["is applied to", "Document objects"], ["is", "initial Document object"], ["is", "transformed response data"]], "LocalSyntheticField": [["is applied to", "response data"], ["is applied to", "Document objects"], ["is", "subgraph"], ["is", "fmeta"], ["is", "type"], ["is", "f"]], "SplitTransform": [["is applied to", "DataRequest objects"], ["is applied to", "response data"]], "subgrounds.subgraph.FieldPath": [["is", "subgraph"], ["is", "root_type"], ["is", "type_"], ["is", "path"]], "subgrounds.subgraph.Filter": [["is", "field"], ["is", "op"], ["is", "value"]], "subgrounds.subgraph.Operator": [["is", "value"]], "subgrounds.subgraph.Object": [["is", "subgraph"], ["is", "object"]], "1656015853": [["MINT", "0xc747962e7e416e2a582813b1d7ad59eb83077fa6"]], "0xc747962e7e416e2a582813b1d7ad59eb83077fa6": [["5.122569e+04", "3"], ["0x1444744f4021a2046787c1b7b88cd9ac21f071c65acc", "1656015773"]], "1656015773": [["MINT", "0xd11aa2e3a000275ed12b87515c9ac0d67b32e7b9"]], "0xd11aa2e3a000275ed12b87515c9ac0d67b32e7b9": [["8.897983e+03", "4"], ["0x3315617d426fc2b0db5d8dbccd549efaa8f1ae2969ca", "1656015693"]], "0xb7dd4d134b1794ee848e1af1a62b85d7b2ea9301": [["0.000000e+00", "11"], ["0xcc713daa2dc58cd1f2218c8f438e7fcf04d2e9c7c83d", "1656015278"]], "1656015278": [["BURN", "0xa7c43e2057d89b6946b8865efc8bee3a4ea7d28d"], ["BURN", "0xa7c43e2057d89b6946b8865efc8bee3a4ea7d28d"]], "'value'": [["'is'", "'constant field\\'s value'"]], "'SyntheticField'": [["'is'", "'constant'"], ["'constant'", "'MINT'"], ["'constant'", "'BURN'"]], "'mints'": [["'orderBy'", "'univ3.Mint.timestamp'"], ["'orderDirection'", "'desc'"]], "'burns'": [["'orderBy'", "'univ3.Burn.timestamp'"], ["'orderDirection'", "'desc'"]], "0.000000e+00": [["11", "0xcc713daa2dc58cd1f2218c8f438e7fcf04d2e9c7c83d"]], "1.254942e+06": [["5", "0x7bbfae86f0c3c983651bd0671557cd851fc301317c06"]], "1656015111": [["MINT", "0xac56cee8ccd00d0c1d72ce3415140874552e80f4"]], "3.432075e+04": [["12", "0xea21c3a68a8f0c6a2721a3072e0c8b2edc77f4d2f0d9"]], "1656014785": [["BURN", "0x0709b103d46d71458a71e5d81230dd688809a53d"]], "2.059106e+04": [["6", "0x3bd369bf45c55cab40c62db81bb3e0684fd85fe2b662"]], "values": [["in", "dict"]], "pooladdr_symbol_map": [["is", "dictionary"], ["with", "'UNKNOWN' as the default value"]], "univ3.Pool.symbol": [["is", "SyntheticField.map"], ["SyntheticField.STRING", "pooladdr_symbol_map"], ["univ3.Pool.id", "'UNKNOWN'"]], "pools": [["univ3.Query.pools", "first=10"], ["orderBy", "univ3.Pool.totalValueLockedUSD"], ["orderDirection", "'desc'"], ["0", "0xa850478adaace4c08fc61de44d8cf3b64f359bec"], ["first", "1"], ["orderBy", "LiquidityPool.totalValueLockedUSD"], ["orderDirection", "'desc'"]], "varname": [["is", "name of the variable"], ["exists in", "selection"]], "selection": [["raises", "KeyError"]], "select": [["has variable value named", "varname"], ["returns", "argument"]], "substitute_arg": [["replaces", "argument"], ["is called on", "self"], ["is applied to", "latter"]], "prune_undefined": [["returns", "new Selection"], ["contains", "subtree"]], "other": [["is contained in", "query"]], "subgrounds.query": [["is", "class"], ["has", "Fragment"], ["has", "Document"]], "subgrounds.utils": [["flatten_dict", "data"], ["flatten_dict", "keys"], ["contains_list", "data"], ["default_header", "url"], ["user_agent", "None"]], "subgrounds.dataframe_utils": [["DataFrameColumns", "key"]], "DataFrameColumns": [["combine", "other"], ["mk_df", "data"]], "SchemaMeta": [["contains", "data structures"], ["used to represent", "GraphQL schemas"], ["Create", "new model"], ["parsing and validating", "input data"], ["Raises", "ValidationError"], ["Returns", "type information"], ["refers to", "non-existant type"], ["Returns", "argument or field definition's underlying type"], ["Recursively finds", "nested type"], ["Returns", "type of interest"]], "Playgrounds": [["start with", "sequence"], ["differentiate them from", "other API keys"], ["Creating", "Playgrounds account"], ["Create", "Playgrounds API key"], ["Copy", "Playgrounds API key"], ["obtaining", "API key"], ["use", "proxy API endpoint"], ["query", "decentralized subgraphs"], ["do", "in two ways"], ["Finding", "subgraph's ID"], ["is", "API"], ["has", "logo"], ["has", "primary.svg"], ["has", "PG_API_KEY"], ["has", "subgraph ID"], ["has", "deployment ID"], ["has", "URL"], ["has", "endpoint"], ["has", "decentralized service"], ["has", "Ethereum"]], "Query": [["are 1:1 to", "number of requests"], ["are not 1:1 with", "subgrounds snippet"], ["could be getting", "hundreds of thousands of rows"], ["automatically handles", "pagination"], ["makes", "multiple GraphQL queries"], ["placed in", "first argument"], ["correlates to", "number of expected pages"]], "Playgrounds API": [["is organized around", "REST"], ["features", "top-level resource"]], "API": [["accepts", "request parameters"], ["uses", "API keys"], ["is performed via", "Playgrounds authorization header"], ["has", "endpoint"]], "API keys": [["carry", "many privileges"]], "Playgrounds authorization header": [["is", "Playgrounds-Api-Key"]], "endpoint": [["is", "Subgraph Proxy"]], "Subgraph Proxy": [["provides access to", "subgraphs"], ["gets", "name"]], "stargate_eth": [["pools_query", "first=1000"], ["Query.pools", "first=1000"]], "print": [["\"Cumulative Metrics:\"", "cumulative_metrics_df"], ["\"Snapshot Information:\"", "snapshot_info_df"], ["\"Snapshot Fields:\"", "snapshot_df"], ["\"Creation Fields:\"", "creation_df"], ["\"Cumulative Metrics Fields:\"", "cumulative_metrics_df"], ["\"Identity Fields:\"", "identity_df"], ["\"Liquidity Fields:\"", "liquidity_df"], ["\"Rewards Fields:\"", "rewards_df"], ["\"Volume Fields:\"", "volume_df"], ["\"Total Value Locked Fields:\"", "value_locked_df"], ["\"Cumulative Metrics:\"", "cumulative_metrics_df"], ["\"Snapshot Information:\"", "snapshot_info_df"], ["\"Snapshot Fields:\"", "snapshot_df"], ["\"Creation Fields:\"", "creation_df"], ["\"Cumulative Metrics Fields:\"", "cumulative_metrics_df"], ["\"Identity Fields:\"", "identity_df"], ["\"Liquidity Fields:\"", "liquidity_df"], ["\"Rewards Fields:\"", "rewards_df"], ["\"Volume Fields:\"", "volume_df"], ["\"Total Value Locked Fields:\"", "value_locked_df"]], "pd": [["DataFrame", "cumulative_metrics_df"], ["DataFrame", "daily_metrics_df"], ["DataFrame", "snapshot_info_df"], ["DataFrame", "protocol_metrics_df"], ["DataFrame", "snapshot_df"], ["DataFrame", "creation_df"], ["DataFrame", "cumulative_metrics_df"], ["DataFrame", "identity_df"], ["DataFrame", "liquidity_df"], ["DataFrame", "rewards_df"], ["DataFrame", "volume_df"], ["DataFrame", "value_locked_df"]], "subgraph": [["load_subgraph", "'https://api.thegraph.com/subgraphs/name/messari/balancer-v2-ethereum'"], ["load_subgraph", "f\"https://api.playgrounds.network/v1/proxy/subgraphs/id/{uniswap_id}\""], ["Query.tokens.id", "None"], ["Query.tokens.symbol", "None"]], "LiquidityPool entity": [["create SyntheticField", "datetime"], ["format", "createdTimestamp"], ["createdTimestamp", "human readable datetime string"]], "balancer_v2.LiquidityPool": [["SyntheticField", "lambda timestamp: str(datetime.fromtimestamp(int(timestamp)))"], ["SyntheticField.FLOAT", "balancer_v2.LiquidityPool.createdTimestamp"]], "liquidityPools entity": [["create FieldPath object", "required fields"], ["sort data by", "createdTimestamp"], ["limit results to", "100"]], "liquidity_pools_query": [["orderBy", "balancer_v2.LiquidityPool.createdTimestamp"], ["orderDirection", "'desc'"]], "latest_snapshots": [["orderBy", "FinancialsDailySnapshot.timestamp"], ["orderDirection", "'desc'"], ["first", "1"]], "res": [["sg.query_df", "latest_snapshots"], ["squeeze", "None"]], "Aave": [["is", "decentralized finance protocol"], ["allows", "people to lend and borrow cryptocurrencies"], ["is", "decentralized finance protocol"], ["allows", "people to lend and borrow cryptocurrencies"]], "Lenders": [["earn", "interest"], ["deposit", "digital assets into liquidity pools"], ["earn", "interest"], ["deposit", "digital assets into liquidity pools"]], "Borrowers": [["use", "crypto as collateral"], ["take out", "flash loan"], ["use", "crypto as collateral"], ["take out", "flash loan"]], "AAVE v3": [["is", "Ethereum subgraph"]], "Subgrounds library": [["is imported for", "handling decentralized subgraphs"], ["interact with", "Lido Ethereum subgraph"], ["fetch", "specific financial data"], ["import", "datetime"], ["import", "SyntheticField"], ["import", "Subgrounds"], ["import", "pandas"], ["import", "numpy"], ["can be used to", "interact with a subgraph"], ["can be used to", "fetch specific financial data"], ["can be used to", "manipulate and display data"], ["provides", "easy-to-use interface"], ["fetch", "manipulate data"], ["fetch", "data"], ["manipulate", "data"], ["fetch", "data from The Graph"], ["manipulate", "data from The Graph"], ["fetch", "data from blockchains"], ["manipulate", "data from blockchains"], ["fetch", "data from Ethereum"], ["manipulate", "data from Ethereum"]], "pandas": [["is used for", "handling data manipulation"]], "Subgrounds object": [["is instantiated using", "Playgrounds API key"], ["initialized as", "sg"]], "Aave V3": [["introduces", "new risk mitigation features"], ["improves", "capital efficiency"], ["lowers", "gas fees"], ["provides", "additional security and stability"]], "aave_lending": [["is", "lending protocol"], ["name", "None"], ["type", "None"], ["cumulativeBorrowUSD", "None"], ["cumulativeDepositUSD", "None"], ["cumulativeLiquidateUSD", "None"], ["cumulativePositionCount", "None"], ["cumulativeProtocolSideRevenueUSD", "None"], ["cumulativeSupplySideRevenueUSD", "None"], ["cumulativeTotalRevenueUSD", "None"], ["cumulativeUniqueUsers", "None"], ["cumulativeUniqueBorrowers", "None"], ["cumulativeUniqueDepositors", "None"], ["cumulativeUniqueLiquidatees", "None"], ["cumulativeUniqueLiquidators", "None"], ["totalBorrowBalanceUSD", "None"], ["totalDepositBalanceUSD", "None"], ["borrow_dep_ratio", "None"], ["cumulativeUniqueBorrowers", "None"], ["cumulativeUniqueUsers", "None"], ["user_engagement_borrowed", "None"], ["cumulativeUniqueBorrowers", "None"], ["cumulativeUniqueUsers", "None"], ["avg_borrow_per_user", "None"], ["cumulativeBorrowUSD", "None"], ["cumulativeUniqueBorrowers", "None"], ["avg_deposit_per_user", "None"], ["cumulativeDepositUSD", "None"], ["cumulativeUniqueDepositors", "None"], ["avg_liquidation_per_user", "None"], ["cumulativeLiquidateUSD", "None"], ["cumulativeUniqueLiquidatees", "None"]], "fraxlendFactories": [["id", "fraxlend_overview"], ["totalTVLValue", "fraxlend_overview"], ["totalBorrowedValue", "fraxlend_overview"], ["totalCollateralLockedValue", "fraxlend_overview"], ["positionCount", "fraxlend_overview"], ["pairCount", "fraxlend_overview"], ["assetTokenCount", "fraxlend_overview"], ["collateralTokenCount", "fraxlend_overview"]], "lido_activity": [["is loaded using", "API URL"], ["is used to interact with", "Lido Ethereum subgraph"], ["constructs a query to fetch", "usageMetricsDailySnapshots entity"], ["specifies ordering options to sort", "data by timestamp in descending order"], ["limits the number of results to", "30"], ["creates a SyntheticField named", "datetime"], ["takes the original timestamp field", "converts it to a human-readable format"], ["fetches the data and stores it", "in a DataFrame"], ["demonstrates how the Subgrounds library can be used", "to interact with a subgraph"], ["is loaded using", "API URL"], ["is used to interact with", "Lido Ethereum subgraph"], ["constructs a query to fetch", "financialsDailySnapshots entity"], ["specifies ordering options to sort the data by", "timestamp"], ["limits the number of results to", "30"], ["creates a SyntheticField named", "datetime"], ["takes the original timestamp field", "converts it to a human-readable format"], ["fetches the data and stores it in", "DataFrame"], ["demonstrates how the Subgrounds library can be used to interact with", "subgraph"]], "Lido Ethereum subgraph": [["loaded using", "API URL"], ["can be used to", "fetch specific financial data"], ["can be used to", "manipulate and display data"], ["can be used to", "format the timestamp field"], ["can be used to", "format the inputTokenBalance field"], ["can be used to", "format the outputTokenSupply field"], ["can be used to", "query the pool_summary entity"], ["can be used to", "query the pool_creation entity"]], "Subgraph object": [["named", "lido_pool_stETH"]], "code": [["constructs query", "fetch pools entity"], ["specifies ordering options", "sort data"], ["limits number of results", "30"], ["filters results", "include pool with specified ID"]], "financialsDailySnapshots": [["has fields", "timestamp"], ["sorted by", "timestamp"], ["limited to", "last 30 entries"], ["has fields", "dailyProtocolSideRevenueUSD"], ["has fields", "dailySupplySideRevenueUSD"]], "FinancialsDailySnapshot entity": [["has synthetic field", "datetime"], ["has synthetic field", "revDiffRevenueUSD30"], ["has synthetic field", "avgDailyRevenueUSD30"], ["has synthetic field", "revenueMargin30"]], "DataFrame": [["used for", "analysis"]], "Lido": [["Rocket Pool", "subgraphs"], ["fetch", "usage metrics daily snapshots"], ["ordering by", "timestamp"], ["limit", "results"], ["querying", "daily timestamp"], ["load", "subgraph"]], "Rocket Pool": [["fetch", "usage metrics daily snapshots"], ["ordering by", "timestamp"], ["limit", "results"], ["querying", "daily timestamp"]], "rocketPool": [["load", "subgraph"]], "lido_usage": [["Query", "usageMetricsDailySnapshots"], ["orderBy", "lido_subgraph.UsageMetricsDailySnapshot.timestamp"], ["orderDirection", "desc"], ["first", "30"]], "rocket_pool_usage": [["orderBy", "rocketPool_subgraph.UsageMetricsDailySnapshot.timestamp"]]}}